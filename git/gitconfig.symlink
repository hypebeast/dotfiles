[alias]
    log = log --date=local
    count   = !git shortlog -sn
    append = commit --amend --no-edit

    # checkout
    co = checkout                     # checkout
    nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")

    # reset
    unstage = reset HEAD              # remove files from index (tracking)
    uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state

    # status
    s = status                        # status

    # stash
    ss = stash                        # stash changes
    sl = stash list                   # list stashes
    sa = stash apply                  # apply stash (restore changes)
    sd = stash drop                   # drop stashes (destory changes)

    # rebase
	  rebase-onto = "!f() { git rebase --strategy-option ours --onto main $(git merge-base "$1" "$2") "$1"; }; f"

    main-branch = checkout main

[log]
    date = local

[blame]
    date = local

[color]
    diff = auto
    status = auto
    branch = auto
    ui = true

[core]
    excludesfile = ~/.gitignore
    editor = nvim
    pager = delta

[apply]
    whitespace = nowarn

[mergetool]
    keepBackup = false

[difftool]
    prompt = false

[help]
    autocorrect = 1

[push]
    # See `git help config` (search for push.default)
    # for more information on different options of the below setting.
    # Setting to git 2.0 default to suppress warning message
    default = simple

[user]
	name = Sebastian Ruml
	email = sebastian@sebastianruml.name
[interactive]
	diffFilter = delta --color-only

[delta]
    navigate = true       # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
	line-numbers = true
	decorations = true

[merge]
    conflictstyle = diff3

[diff]
    colorMoved = default

[init]
	defaultBranch = main
[credential "https://git.sebastianruml.name"]
	provider = generic
[pull]
	rebase = true
[credential]
	helper = 
	helper = /usr/local/share/gcm-core/git-credential-manager
[credential "https://dev.azure.com"]
	useHttpPath = true
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
